extends tex-template
extends tex-environment
extends tex-array
extends tex-autotrigger

snippet use "usepackage" b
\usepackage${1:[$2]}{$3}
endsnippet

snippet "(s*)sect?(\*?)" "(sub) section" rb
\\`!p snip.rv = "sub" * len(match.group(1)) + "section" + (match.group(2) or "")`{$1}
endsnippet

snippet "it?|-" "item" rb
\item $0
endsnippet

snippet bf "boldface"
\textbf{${1:${VISUAL}}}
endsnippet

snippet em "emph"
\emph{${1:${VISUAL}}}
endsnippet

snippet " "quotes" iA
\`${1:${VISUAL}}'
endsnippet

snippet bib "bibliography" b
\bibliographystyle{${1:chicago}}
\bibliography{${2:\jobname}}
endsnippet

snippet macros "macros" b
\def\pto{\overset{p}{\to}}
\def\dto{\overset{d}{\to}}
\newcommand{\abs}[1]{{\left\lvert #1 \right\rvert}}
\newcommand{\norm}[1]{{\left\lVert #1 \right\rVert}}
endsnippet

snippet letters "bb and cal" b
`!p
import string
upper = string.ascii_uppercase
bbs = ["\\def\\" + (x * 2) + "{\\mathbb{" + x + "}}" for x in upper]
cals = ["\\def\\" + (x * 2).lower() + "{\\mathcal{" + x + "}}" for x in upper]
snip.rv = "\n".join([bb + cal for bb, cal in zip(bbs, cals)])
`
endsnippet

priority 1
snippet "(.*?)(&\s*(?:=|\\neq|<|>|\\leq|\\geq)\s*)(.*?)\\\\(=|\\neq|<|>|\\leq|\\geq)?" "new equation line" rb
`!p
snip.rv += match.group(1) + match.group(2) + match.group(3) + "\\\\\n"
snip.rv += " " * len(match.group(1)) + re.sub(r"=|\\neq|<|>|\\leq|\\geq", re.escape(match.group(4) or "="), match.group(2))`${0:`!p snip.rv =  match.group(3)`}
endsnippet

priority 1
snippet "(\\item.*?)\\\\" "new item" rb
`!p
snip.rv += match.group(1) + "\n"
snip.rv += snip.mkline("\\item")
` $0
endsnippet

# for new row in matrix and tabular, see tex-array.snippets
